Debug "Pre-program - set up slaves"
Branch 1 (Rel 2)
Jump (Rel 7)
Load (ImmValue 1) 2
Compute Sub 1 2 2
ReadInstr (IndAddr 2)
Receive 3
Branch 3 (Ind 3)
Jump (Rel (-3))
Jump (Rel 649)
Debug "Functions"
Debug "FUNCTION: <>iob_error"
Load (ImmValue 0) 3
Compute Add 8 3 3
Load (ImmValue 35) 2
Store 2 (IndAddr 3)
Load (ImmValue 10) 2
Push 2
Load (ImmValue 1) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 69) 2
Push 2
Load (ImmValue 2) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 82) 2
Push 2
Load (ImmValue 3) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 82) 2
Push 2
Load (ImmValue 4) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 79) 2
Push 2
Load (ImmValue 5) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 82) 2
Push 2
Load (ImmValue 6) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 58) 2
Push 2
Load (ImmValue 7) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 8) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 65) 2
Push 2
Load (ImmValue 9) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 114) 2
Push 2
Load (ImmValue 10) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 114) 2
Push 2
Load (ImmValue 11) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 97) 2
Push 2
Load (ImmValue 12) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 121) 2
Push 2
Load (ImmValue 13) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 14) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 105) 2
Push 2
Load (ImmValue 15) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 110) 2
Push 2
Load (ImmValue 16) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 100) 2
Push 2
Load (ImmValue 17) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 101) 2
Push 2
Load (ImmValue 18) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 120) 2
Push 2
Load (ImmValue 19) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 20) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 21) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 117) 2
Push 2
Load (ImmValue 22) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 116) 2
Push 2
Load (ImmValue 23) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 24) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 25) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 102) 2
Push 2
Load (ImmValue 26) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 27) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 98) 2
Push 2
Load (ImmValue 28) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 29) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 117) 2
Push 2
Load (ImmValue 30) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 110) 2
Push 2
Load (ImmValue 31) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 100) 2
Push 2
Load (ImmValue 32) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 33) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 33) 2
Push 2
Load (ImmValue 34) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 10) 2
Push 2
Load (ImmValue 35) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 0) 6
Compute Add 8 6 6
Load (ImmValue 1) 5
Load (IndAddr 6) 2
Compute Add 2 6 2
Load (ImmValue 1) 3
Compute Add 3 6 3
Compute GtE 3 2 4
Branch 4 (Rel 5)
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Compute Add 3 5 3
Jump (Rel (-5))
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Load (ImmValue 2) 3
Compute Sub 8 3 3
Load (IndAddr 3) 2
Jump (Ind 2)
Load (ImmValue 2) 2
Compute Sub 8 2 2
Load (IndAddr 2) 2
Jump (Ind 2)
Debug "FUNCTION: <>div_zero_error"
Load (ImmValue 0) 3
Compute Add 8 3 3
Load (ImmValue 32) 2
Store 2 (IndAddr 3)
Load (ImmValue 10) 2
Push 2
Load (ImmValue 1) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 69) 2
Push 2
Load (ImmValue 2) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 82) 2
Push 2
Load (ImmValue 3) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 82) 2
Push 2
Load (ImmValue 4) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 79) 2
Push 2
Load (ImmValue 5) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 82) 2
Push 2
Load (ImmValue 6) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 58) 2
Push 2
Load (ImmValue 7) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 8) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 67) 2
Push 2
Load (ImmValue 9) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 97) 2
Push 2
Load (ImmValue 10) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 110) 2
Push 2
Load (ImmValue 11) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 12) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 110) 2
Push 2
Load (ImmValue 13) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 14) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 116) 2
Push 2
Load (ImmValue 15) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 16) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 100) 2
Push 2
Load (ImmValue 17) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 105) 2
Push 2
Load (ImmValue 18) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 118) 2
Push 2
Load (ImmValue 19) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 105) 2
Push 2
Load (ImmValue 20) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 100) 2
Push 2
Load (ImmValue 21) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 101) 2
Push 2
Load (ImmValue 22) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 23) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 98) 2
Push 2
Load (ImmValue 24) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 121) 2
Push 2
Load (ImmValue 25) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 26) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 122) 2
Push 2
Load (ImmValue 27) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 101) 2
Push 2
Load (ImmValue 28) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 114) 2
Push 2
Load (ImmValue 29) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 30) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 33) 2
Push 2
Load (ImmValue 31) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 10) 2
Push 2
Load (ImmValue 32) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 0) 6
Compute Add 8 6 6
Load (ImmValue 1) 5
Load (IndAddr 6) 2
Compute Add 2 6 2
Load (ImmValue 1) 3
Compute Add 3 6 3
Compute GtE 3 2 4
Branch 4 (Rel 5)
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Compute Add 3 5 3
Jump (Rel (-5))
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Load (ImmValue 2) 3
Compute Sub 8 3 3
Load (IndAddr 3) 2
Jump (Ind 2)
Load (ImmValue 2) 2
Compute Sub 8 2 2
Load (IndAddr 2) 2
Jump (Ind 2)
Debug "FUNCTION: wait"
Load (ImmValue 0) 2
Push 2
Pop 2
Load (ImmValue 0) 3
Compute Add 8 3 3
Store 2 (IndAddr 3)
Load (ImmValue 0) 2
Compute Add 2 8 2
Load (IndAddr 2) 2
Push 2
Load (ImmValue 1) 2
Compute Sub 8 2 2
Load (ImmValue 1) 3
Compute Sub 2 3 3
Load (IndAddr 3) 3
Load (IndAddr 2) 2
Branch 3 (Rel 3)
Load (IndAddr 2) 2
Jump (Rel 3)
ReadInstr (IndAddr 2)
Receive 2
Push 2
Pop 3
Pop 2
Compute Lt 2 3 2
Push 2
Pop 2
Branch 2 (Rel 2)
Jump (Rel 14)
Load (ImmValue 0) 2
Compute Add 2 8 2
Load (IndAddr 2) 2
Push 2
Load (ImmValue 1) 3
Pop 2
Compute Add 2 3 2
Push 2
Pop 2
Load (ImmValue 0) 3
Compute Add 8 3 3
Store 2 (IndAddr 3)
Jump (Rel (-35))
Load (ImmValue 1) 3
Compute Add 8 3 3
Load (ImmValue 20) 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 2) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 3) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 97) 2
Push 2
Load (ImmValue 4) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 121) 2
Push 2
Load (ImmValue 5) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 6) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 58) 2
Push 2
Load (ImmValue 7) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 8) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 119) 2
Push 2
Load (ImmValue 9) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 97) 2
Push 2
Load (ImmValue 10) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 105) 2
Push 2
Load (ImmValue 11) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 116) 2
Push 2
Load (ImmValue 12) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 105) 2
Push 2
Load (ImmValue 13) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 110) 2
Push 2
Load (ImmValue 14) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 103) 2
Push 2
Load (ImmValue 15) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 16) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 100) 2
Push 2
Load (ImmValue 17) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 18) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 110) 2
Push 2
Load (ImmValue 19) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 101) 2
Push 2
Load (ImmValue 20) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 10) 2
Push 2
Load (ImmValue 21) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Push 1
Pop 2
WriteInstr 2 (DirAddr 65536)
Load (ImmValue 1) 6
Compute Add 8 6 6
Load (ImmValue 1) 5
Load (IndAddr 6) 2
Compute Add 2 6 2
Load (ImmValue 1) 3
Compute Add 3 6 3
Compute GtE 3 2 4
Branch 4 (Rel 5)
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Compute Add 3 5 3
Jump (Rel (-5))
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Load (ImmValue 4) 2
Compute Sub 8 2 2
Load (IndAddr 2) 2
Jump (Ind 2)
Debug "Start of program"
Load (ImmValue 0) 8
Push 0
Pop 2
WriteInstr 2 (DirAddr 2)
Debug "Pre-parallel - call slaves"
Load (ImmValue 667) 2
WriteInstr 2 (DirAddr 0)
Debug "Start of parallel block"
Load (ImmValue 200) 2
Push 2
Pop 2
Load (ImmValue 0) 3
Compute Add 8 3 3
Store 2 (IndAddr 3)
Debug "Start sync on: _g_v#//"
TestAndSet (DirAddr 1)
Receive 2
Branch 2 (Rel 2)
Jump (Rel (-3))
Load (ImmValue 1) 3
Compute Add 8 3 3
Load (ImmValue 16) 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 2) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 3) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 97) 2
Push 2
Load (ImmValue 4) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 121) 2
Push 2
Load (ImmValue 5) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 6) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 58) 2
Push 2
Load (ImmValue 7) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 8) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 103) 2
Push 2
Load (ImmValue 9) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 10) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 116) 2
Push 2
Load (ImmValue 11) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 12) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 108) 2
Push 2
Load (ImmValue 13) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 14) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 99) 2
Push 2
Load (ImmValue 15) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 107) 2
Push 2
Load (ImmValue 16) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 10) 2
Push 2
Load (ImmValue 17) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Push 1
Pop 2
WriteInstr 2 (DirAddr 65536)
Load (ImmValue 1) 6
Compute Add 8 6 6
Load (ImmValue 1) 5
Load (IndAddr 6) 2
Compute Add 2 6 2
Load (ImmValue 1) 3
Compute Add 3 6 3
Compute GtE 3 2 4
Branch 4 (Rel 5)
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Compute Add 3 5 3
Jump (Rel (-5))
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Load (ImmValue 1) 3
Load (ImmValue 41) 2
Compute Add 8 2 2
Store 0 (IndAddr 2)
Compute Add 2 3 2
Load (ImmValue 814) 4
Store 4 (IndAddr 2)
Compute Add 2 3 2
Store 8 (IndAddr 2)
Compute Add 2 3 2
Load (ImmValue 0) 4
Compute Add 8 4 4
Store 0 (IndAddr 2)
Compute Add 2 3 2
Store 4 (IndAddr 2)
Load (ImmValue 46) 2
Compute Add 8 2 8
Jump (Abs 469)
Load (ImmValue 5) 2
Compute Sub 8 2 2
Load (IndAddr 2) 2
Push 2
Load (ImmValue 3) 2
Compute Sub 8 2 2
Load (IndAddr 2) 8
Load (ImmValue 18) 3
Compute Add 8 3 3
Load (ImmValue 22) 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 19) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 20) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 97) 2
Push 2
Load (ImmValue 21) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 121) 2
Push 2
Load (ImmValue 22) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 23) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 58) 2
Push 2
Load (ImmValue 24) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 25) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 114) 2
Push 2
Load (ImmValue 26) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 101) 2
Push 2
Load (ImmValue 27) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 108) 2
Push 2
Load (ImmValue 28) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 101) 2
Push 2
Load (ImmValue 29) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 97) 2
Push 2
Load (ImmValue 30) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 115) 2
Push 2
Load (ImmValue 31) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 105) 2
Push 2
Load (ImmValue 32) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 110) 2
Push 2
Load (ImmValue 33) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 103) 2
Push 2
Load (ImmValue 34) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 32) 2
Push 2
Load (ImmValue 35) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 108) 2
Push 2
Load (ImmValue 36) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 111) 2
Push 2
Load (ImmValue 37) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 99) 2
Push 2
Load (ImmValue 38) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 107) 2
Push 2
Load (ImmValue 39) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Load (ImmValue 10) 2
Push 2
Load (ImmValue 40) 3
Compute Add 8 3 3
Pop 2
Store 2 (IndAddr 3)
Push 1
Pop 2
WriteInstr 2 (DirAddr 65536)
Load (ImmValue 18) 6
Compute Add 8 6 6
Load (ImmValue 1) 5
Load (IndAddr 6) 2
Compute Add 2 6 2
Load (ImmValue 1) 3
Compute Add 3 6 3
Compute GtE 3 2 4
Branch 4 (Rel 5)
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
Compute Add 3 5 3
Jump (Rel (-5))
Load (IndAddr 3) 7
WriteInstr 7 (DirAddr 65537)
WriteInstr 0 (DirAddr 1)
Debug "End sync on: _g_v#//"
Debug "Post-parallel - slaves terminate and master joins"
Compute Equal 1 0 2
Branch 2 (Rel 5)
Load (ImmValue 1) 2
Compute Sub 1 2 2
WriteInstr 0 (IndAddr 2)
Jump (Abs 5)
ReadInstr (DirAddr 0)
Receive 2
Branch 2 (Rel (-2))
Debug "Return to program"
Debug "Post-program - kill slaves"
Load (ImmValue 991) 2
WriteInstr 2 (DirAddr 0)
EndProg

-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------

Variables:

Local:
out#wait		1
i#wait		0
err#<>div_zero_error		0
err#<>iob_error		0
out2#//		18
out1#//		1
wait_b#//		0
Global:
_g_v#//		2


Compiled code:

0 ==>	Pre-program - set up slaves
1	Branch		regSprID		-> Rel 2
2	Jump				-> Rel 7
3	Load		1		=> regA
4	Compute Sub	regSprID, regA	=> regA
5	ReadInstr	regA
6	Receive				-> regB
7	Branch		regB		-> Ind regB
8	Jump				-> Rel (-3)
9	Jump				-> Rel 649
10 ==>	Functions
11 ==>	FUNCTION: <>iob_error
12	Load		0		=> regB
13	Compute Add	regARP, regB	=> regB
14	Load		35		=> regA
15	Store		regA		=> regB
16	Load		10		=> regA
17	Push		regA
18	Load		1		=> regB
19	Compute Add	regARP, regB	=> regB
20	Pop				=> regA
21	Store		regA		=> regB
22	Load		69		=> regA
23	Push		regA
24	Load		2		=> regB
25	Compute Add	regARP, regB	=> regB
26	Pop				=> regA
27	Store		regA		=> regB
28	Load		82		=> regA
29	Push		regA
30	Load		3		=> regB
31	Compute Add	regARP, regB	=> regB
32	Pop				=> regA
33	Store		regA		=> regB
34	Load		82		=> regA
35	Push		regA
36	Load		4		=> regB
37	Compute Add	regARP, regB	=> regB
38	Pop				=> regA
39	Store		regA		=> regB
40	Load		79		=> regA
41	Push		regA
42	Load		5		=> regB
43	Compute Add	regARP, regB	=> regB
44	Pop				=> regA
45	Store		regA		=> regB
46	Load		82		=> regA
47	Push		regA
48	Load		6		=> regB
49	Compute Add	regARP, regB	=> regB
50	Pop				=> regA
51	Store		regA		=> regB
52	Load		58		=> regA
53	Push		regA
54	Load		7		=> regB
55	Compute Add	regARP, regB	=> regB
56	Pop				=> regA
57	Store		regA		=> regB
58	Load		32		=> regA
59	Push		regA
60	Load		8		=> regB
61	Compute Add	regARP, regB	=> regB
62	Pop				=> regA
63	Store		regA		=> regB
64	Load		65		=> regA
65	Push		regA
66	Load		9		=> regB
67	Compute Add	regARP, regB	=> regB
68	Pop				=> regA
69	Store		regA		=> regB
70	Load		114		=> regA
71	Push		regA
72	Load		10		=> regB
73	Compute Add	regARP, regB	=> regB
74	Pop				=> regA
75	Store		regA		=> regB
76	Load		114		=> regA
77	Push		regA
78	Load		11		=> regB
79	Compute Add	regARP, regB	=> regB
80	Pop				=> regA
81	Store		regA		=> regB
82	Load		97		=> regA
83	Push		regA
84	Load		12		=> regB
85	Compute Add	regARP, regB	=> regB
86	Pop				=> regA
87	Store		regA		=> regB
88	Load		121		=> regA
89	Push		regA
90	Load		13		=> regB
91	Compute Add	regARP, regB	=> regB
92	Pop				=> regA
93	Store		regA		=> regB
94	Load		32		=> regA
95	Push		regA
96	Load		14		=> regB
97	Compute Add	regARP, regB	=> regB
98	Pop				=> regA
99	Store		regA		=> regB
100	Load		105		=> regA
101	Push		regA
102	Load		15		=> regB
103	Compute Add	regARP, regB	=> regB
104	Pop				=> regA
105	Store		regA		=> regB
106	Load		110		=> regA
107	Push		regA
108	Load		16		=> regB
109	Compute Add	regARP, regB	=> regB
110	Pop				=> regA
111	Store		regA		=> regB
112	Load		100		=> regA
113	Push		regA
114	Load		17		=> regB
115	Compute Add	regARP, regB	=> regB
116	Pop				=> regA
117	Store		regA		=> regB
118	Load		101		=> regA
119	Push		regA
120	Load		18		=> regB
121	Compute Add	regARP, regB	=> regB
122	Pop				=> regA
123	Store		regA		=> regB
124	Load		120		=> regA
125	Push		regA
126	Load		19		=> regB
127	Compute Add	regARP, regB	=> regB
128	Pop				=> regA
129	Store		regA		=> regB
130	Load		32		=> regA
131	Push		regA
132	Load		20		=> regB
133	Compute Add	regARP, regB	=> regB
134	Pop				=> regA
135	Store		regA		=> regB
136	Load		111		=> regA
137	Push		regA
138	Load		21		=> regB
139	Compute Add	regARP, regB	=> regB
140	Pop				=> regA
141	Store		regA		=> regB
142	Load		117		=> regA
143	Push		regA
144	Load		22		=> regB
145	Compute Add	regARP, regB	=> regB
146	Pop				=> regA
147	Store		regA		=> regB
148	Load		116		=> regA
149	Push		regA
150	Load		23		=> regB
151	Compute Add	regARP, regB	=> regB
152	Pop				=> regA
153	Store		regA		=> regB
154	Load		32		=> regA
155	Push		regA
156	Load		24		=> regB
157	Compute Add	regARP, regB	=> regB
158	Pop				=> regA
159	Store		regA		=> regB
160	Load		111		=> regA
161	Push		regA
162	Load		25		=> regB
163	Compute Add	regARP, regB	=> regB
164	Pop				=> regA
165	Store		regA		=> regB
166	Load		102		=> regA
167	Push		regA
168	Load		26		=> regB
169	Compute Add	regARP, regB	=> regB
170	Pop				=> regA
171	Store		regA		=> regB
172	Load		32		=> regA
173	Push		regA
174	Load		27		=> regB
175	Compute Add	regARP, regB	=> regB
176	Pop				=> regA
177	Store		regA		=> regB
178	Load		98		=> regA
179	Push		regA
180	Load		28		=> regB
181	Compute Add	regARP, regB	=> regB
182	Pop				=> regA
183	Store		regA		=> regB
184	Load		111		=> regA
185	Push		regA
186	Load		29		=> regB
187	Compute Add	regARP, regB	=> regB
188	Pop				=> regA
189	Store		regA		=> regB
190	Load		117		=> regA
191	Push		regA
192	Load		30		=> regB
193	Compute Add	regARP, regB	=> regB
194	Pop				=> regA
195	Store		regA		=> regB
196	Load		110		=> regA
197	Push		regA
198	Load		31		=> regB
199	Compute Add	regARP, regB	=> regB
200	Pop				=> regA
201	Store		regA		=> regB
202	Load		100		=> regA
203	Push		regA
204	Load		32		=> regB
205	Compute Add	regARP, regB	=> regB
206	Pop				=> regA
207	Store		regA		=> regB
208	Load		115		=> regA
209	Push		regA
210	Load		33		=> regB
211	Compute Add	regARP, regB	=> regB
212	Pop				=> regA
213	Store		regA		=> regB
214	Load		33		=> regA
215	Push		regA
216	Load		34		=> regB
217	Compute Add	regARP, regB	=> regB
218	Pop				=> regA
219	Store		regA		=> regB
220	Load		10		=> regA
221	Push		regA
222	Load		35		=> regB
223	Compute Add	regARP, regB	=> regB
224	Pop				=> regA
225	Store		regA		=> regB
226	Load		0		=> regE
227	Compute Add	regARP, regE	=> regE
228	Load		1		=> regD
229	Load		regE		=> regA
230	Compute Add	regA, regE	=> regA
231	Load		1		=> regB
232	Compute Add	regB, regE	=> regB
233	Compute GtE	regB, regA	=> regC
234	Branch		regC		-> Rel 5
235	Load		regB		=> regF
236	WriteInstr	regF		=> 65537
237	Compute Add	regB, regD	=> regB
238	Jump				-> Rel (-5)
239	Load		regB		=> regF
240	WriteInstr	regF		=> 65537
241	Load		2		=> regB
242	Compute Sub	regARP, regB	=> regB
243	Load		regB		=> regA
244	Jump				-> Ind regA
245	Load		2		=> regA
246	Compute Sub	regARP, regA	=> regA
247	Load		regA		=> regA
248	Jump				-> Ind regA
249 ==>	FUNCTION: <>div_zero_error
250	Load		0		=> regB
251	Compute Add	regARP, regB	=> regB
252	Load		32		=> regA
253	Store		regA		=> regB
254	Load		10		=> regA
255	Push		regA
256	Load		1		=> regB
257	Compute Add	regARP, regB	=> regB
258	Pop				=> regA
259	Store		regA		=> regB
260	Load		69		=> regA
261	Push		regA
262	Load		2		=> regB
263	Compute Add	regARP, regB	=> regB
264	Pop				=> regA
265	Store		regA		=> regB
266	Load		82		=> regA
267	Push		regA
268	Load		3		=> regB
269	Compute Add	regARP, regB	=> regB
270	Pop				=> regA
271	Store		regA		=> regB
272	Load		82		=> regA
273	Push		regA
274	Load		4		=> regB
275	Compute Add	regARP, regB	=> regB
276	Pop				=> regA
277	Store		regA		=> regB
278	Load		79		=> regA
279	Push		regA
280	Load		5		=> regB
281	Compute Add	regARP, regB	=> regB
282	Pop				=> regA
283	Store		regA		=> regB
284	Load		82		=> regA
285	Push		regA
286	Load		6		=> regB
287	Compute Add	regARP, regB	=> regB
288	Pop				=> regA
289	Store		regA		=> regB
290	Load		58		=> regA
291	Push		regA
292	Load		7		=> regB
293	Compute Add	regARP, regB	=> regB
294	Pop				=> regA
295	Store		regA		=> regB
296	Load		32		=> regA
297	Push		regA
298	Load		8		=> regB
299	Compute Add	regARP, regB	=> regB
300	Pop				=> regA
301	Store		regA		=> regB
302	Load		67		=> regA
303	Push		regA
304	Load		9		=> regB
305	Compute Add	regARP, regB	=> regB
306	Pop				=> regA
307	Store		regA		=> regB
308	Load		97		=> regA
309	Push		regA
310	Load		10		=> regB
311	Compute Add	regARP, regB	=> regB
312	Pop				=> regA
313	Store		regA		=> regB
314	Load		110		=> regA
315	Push		regA
316	Load		11		=> regB
317	Compute Add	regARP, regB	=> regB
318	Pop				=> regA
319	Store		regA		=> regB
320	Load		32		=> regA
321	Push		regA
322	Load		12		=> regB
323	Compute Add	regARP, regB	=> regB
324	Pop				=> regA
325	Store		regA		=> regB
326	Load		110		=> regA
327	Push		regA
328	Load		13		=> regB
329	Compute Add	regARP, regB	=> regB
330	Pop				=> regA
331	Store		regA		=> regB
332	Load		111		=> regA
333	Push		regA
334	Load		14		=> regB
335	Compute Add	regARP, regB	=> regB
336	Pop				=> regA
337	Store		regA		=> regB
338	Load		116		=> regA
339	Push		regA
340	Load		15		=> regB
341	Compute Add	regARP, regB	=> regB
342	Pop				=> regA
343	Store		regA		=> regB
344	Load		32		=> regA
345	Push		regA
346	Load		16		=> regB
347	Compute Add	regARP, regB	=> regB
348	Pop				=> regA
349	Store		regA		=> regB
350	Load		100		=> regA
351	Push		regA
352	Load		17		=> regB
353	Compute Add	regARP, regB	=> regB
354	Pop				=> regA
355	Store		regA		=> regB
356	Load		105		=> regA
357	Push		regA
358	Load		18		=> regB
359	Compute Add	regARP, regB	=> regB
360	Pop				=> regA
361	Store		regA		=> regB
362	Load		118		=> regA
363	Push		regA
364	Load		19		=> regB
365	Compute Add	regARP, regB	=> regB
366	Pop				=> regA
367	Store		regA		=> regB
368	Load		105		=> regA
369	Push		regA
370	Load		20		=> regB
371	Compute Add	regARP, regB	=> regB
372	Pop				=> regA
373	Store		regA		=> regB
374	Load		100		=> regA
375	Push		regA
376	Load		21		=> regB
377	Compute Add	regARP, regB	=> regB
378	Pop				=> regA
379	Store		regA		=> regB
380	Load		101		=> regA
381	Push		regA
382	Load		22		=> regB
383	Compute Add	regARP, regB	=> regB
384	Pop				=> regA
385	Store		regA		=> regB
386	Load		32		=> regA
387	Push		regA
388	Load		23		=> regB
389	Compute Add	regARP, regB	=> regB
390	Pop				=> regA
391	Store		regA		=> regB
392	Load		98		=> regA
393	Push		regA
394	Load		24		=> regB
395	Compute Add	regARP, regB	=> regB
396	Pop				=> regA
397	Store		regA		=> regB
398	Load		121		=> regA
399	Push		regA
400	Load		25		=> regB
401	Compute Add	regARP, regB	=> regB
402	Pop				=> regA
403	Store		regA		=> regB
404	Load		32		=> regA
405	Push		regA
406	Load		26		=> regB
407	Compute Add	regARP, regB	=> regB
408	Pop				=> regA
409	Store		regA		=> regB
410	Load		122		=> regA
411	Push		regA
412	Load		27		=> regB
413	Compute Add	regARP, regB	=> regB
414	Pop				=> regA
415	Store		regA		=> regB
416	Load		101		=> regA
417	Push		regA
418	Load		28		=> regB
419	Compute Add	regARP, regB	=> regB
420	Pop				=> regA
421	Store		regA		=> regB
422	Load		114		=> regA
423	Push		regA
424	Load		29		=> regB
425	Compute Add	regARP, regB	=> regB
426	Pop				=> regA
427	Store		regA		=> regB
428	Load		111		=> regA
429	Push		regA
430	Load		30		=> regB
431	Compute Add	regARP, regB	=> regB
432	Pop				=> regA
433	Store		regA		=> regB
434	Load		33		=> regA
435	Push		regA
436	Load		31		=> regB
437	Compute Add	regARP, regB	=> regB
438	Pop				=> regA
439	Store		regA		=> regB
440	Load		10		=> regA
441	Push		regA
442	Load		32		=> regB
443	Compute Add	regARP, regB	=> regB
444	Pop				=> regA
445	Store		regA		=> regB
446	Load		0		=> regE
447	Compute Add	regARP, regE	=> regE
448	Load		1		=> regD
449	Load		regE		=> regA
450	Compute Add	regA, regE	=> regA
451	Load		1		=> regB
452	Compute Add	regB, regE	=> regB
453	Compute GtE	regB, regA	=> regC
454	Branch		regC		-> Rel 5
455	Load		regB		=> regF
456	WriteInstr	regF		=> 65537
457	Compute Add	regB, regD	=> regB
458	Jump				-> Rel (-5)
459	Load		regB		=> regF
460	WriteInstr	regF		=> 65537
461	Load		2		=> regB
462	Compute Sub	regARP, regB	=> regB
463	Load		regB		=> regA
464	Jump				-> Ind regA
465	Load		2		=> regA
466	Compute Sub	regARP, regA	=> regA
467	Load		regA		=> regA
468	Jump				-> Ind regA
469 ==>	FUNCTION: wait
470	Load		0		=> regA
471	Push		regA
472	Pop				=> regA
473	Load		0		=> regB
474	Compute Add	regARP, regB	=> regB
475	Store		regA		=> regB
476	Load		0		=> regA
477	Compute Add	regA, regARP	=> regA
478	Load		regA		=> regA
479	Push		regA
480	Load		1		=> regA
481	Compute Sub	regARP, regA	=> regA
482	Load		1		=> regB
483	Compute Sub	regA, regB	=> regB
484	Load		regB		=> regB
485	Load		regA		=> regA
486	Branch		regB		-> Rel 3
487	Load		regA		=> regA
488	Jump				-> Rel 3
489	ReadInstr	regA
490	Receive				-> regA
491	Push		regA
492	Pop				=> regB
493	Pop				=> regA
494	Compute Lt	regA, regB	=> regA
495	Push		regA
496	Pop				=> regA
497	Branch		regA		-> Rel 2
498	Jump				-> Rel 14
499	Load		0		=> regA
500	Compute Add	regA, regARP	=> regA
501	Load		regA		=> regA
502	Push		regA
503	Load		1		=> regB
504	Pop				=> regA
505	Compute Add	regA, regB	=> regA
506	Push		regA
507	Pop				=> regA
508	Load		0		=> regB
509	Compute Add	regARP, regB	=> regB
510	Store		regA		=> regB
511	Jump				-> Rel (-35)
512	Load		1		=> regB
513	Compute Add	regARP, regB	=> regB
514	Load		20		=> regA
515	Store		regA		=> regB
516	Load		32		=> regA
517	Push		regA
518	Load		2		=> regB
519	Compute Add	regARP, regB	=> regB
520	Pop				=> regA
521	Store		regA		=> regB
522	Load		115		=> regA
523	Push		regA
524	Load		3		=> regB
525	Compute Add	regARP, regB	=> regB
526	Pop				=> regA
527	Store		regA		=> regB
528	Load		97		=> regA
529	Push		regA
530	Load		4		=> regB
531	Compute Add	regARP, regB	=> regB
532	Pop				=> regA
533	Store		regA		=> regB
534	Load		121		=> regA
535	Push		regA
536	Load		5		=> regB
537	Compute Add	regARP, regB	=> regB
538	Pop				=> regA
539	Store		regA		=> regB
540	Load		115		=> regA
541	Push		regA
542	Load		6		=> regB
543	Compute Add	regARP, regB	=> regB
544	Pop				=> regA
545	Store		regA		=> regB
546	Load		58		=> regA
547	Push		regA
548	Load		7		=> regB
549	Compute Add	regARP, regB	=> regB
550	Pop				=> regA
551	Store		regA		=> regB
552	Load		32		=> regA
553	Push		regA
554	Load		8		=> regB
555	Compute Add	regARP, regB	=> regB
556	Pop				=> regA
557	Store		regA		=> regB
558	Load		119		=> regA
559	Push		regA
560	Load		9		=> regB
561	Compute Add	regARP, regB	=> regB
562	Pop				=> regA
563	Store		regA		=> regB
564	Load		97		=> regA
565	Push		regA
566	Load		10		=> regB
567	Compute Add	regARP, regB	=> regB
568	Pop				=> regA
569	Store		regA		=> regB
570	Load		105		=> regA
571	Push		regA
572	Load		11		=> regB
573	Compute Add	regARP, regB	=> regB
574	Pop				=> regA
575	Store		regA		=> regB
576	Load		116		=> regA
577	Push		regA
578	Load		12		=> regB
579	Compute Add	regARP, regB	=> regB
580	Pop				=> regA
581	Store		regA		=> regB
582	Load		105		=> regA
583	Push		regA
584	Load		13		=> regB
585	Compute Add	regARP, regB	=> regB
586	Pop				=> regA
587	Store		regA		=> regB
588	Load		110		=> regA
589	Push		regA
590	Load		14		=> regB
591	Compute Add	regARP, regB	=> regB
592	Pop				=> regA
593	Store		regA		=> regB
594	Load		103		=> regA
595	Push		regA
596	Load		15		=> regB
597	Compute Add	regARP, regB	=> regB
598	Pop				=> regA
599	Store		regA		=> regB
600	Load		32		=> regA
601	Push		regA
602	Load		16		=> regB
603	Compute Add	regARP, regB	=> regB
604	Pop				=> regA
605	Store		regA		=> regB
606	Load		100		=> regA
607	Push		regA
608	Load		17		=> regB
609	Compute Add	regARP, regB	=> regB
610	Pop				=> regA
611	Store		regA		=> regB
612	Load		111		=> regA
613	Push		regA
614	Load		18		=> regB
615	Compute Add	regARP, regB	=> regB
616	Pop				=> regA
617	Store		regA		=> regB
618	Load		110		=> regA
619	Push		regA
620	Load		19		=> regB
621	Compute Add	regARP, regB	=> regB
622	Pop				=> regA
623	Store		regA		=> regB
624	Load		101		=> regA
625	Push		regA
626	Load		20		=> regB
627	Compute Add	regARP, regB	=> regB
628	Pop				=> regA
629	Store		regA		=> regB
630	Load		10		=> regA
631	Push		regA
632	Load		21		=> regB
633	Compute Add	regARP, regB	=> regB
634	Pop				=> regA
635	Store		regA		=> regB
636	Push		regSprID
637	Pop				=> regA
638	WriteInstr	regA		=> 65536
639	Load		1		=> regE
640	Compute Add	regARP, regE	=> regE
641	Load		1		=> regD
642	Load		regE		=> regA
643	Compute Add	regA, regE	=> regA
644	Load		1		=> regB
645	Compute Add	regB, regE	=> regB
646	Compute GtE	regB, regA	=> regC
647	Branch		regC		-> Rel 5
648	Load		regB		=> regF
649	WriteInstr	regF		=> 65537
650	Compute Add	regB, regD	=> regB
651	Jump				-> Rel (-5)
652	Load		regB		=> regF
653	WriteInstr	regF		=> 65537
654	Load		4		=> regA
655	Compute Sub	regARP, regA	=> regA
656	Load		regA		=> regA
657	Jump				-> Ind regA
658 ==>	Start of program
659	Load		0		=> regARP
660	Push		reg0
661	Pop				=> regA
662	WriteInstr	regA		=> 2
663 ==>	Pre-parallel - call slaves
664	Load		667		=> regA
665	WriteInstr	regA		=> 0
666 ==>	Start of parallel block
667	Load		200		=> regA
668	Push		regA
669	Pop				=> regA
670	Load		0		=> regB
671	Compute Add	regARP, regB	=> regB
672	Store		regA		=> regB
673 ==>	Start sync on: _g_v#//
674	TestAndSet			1
675	Receive				-> regA
676	Branch		regA		-> Rel 2
677	Jump				-> Rel (-3)
678	Load		1		=> regB
679	Compute Add	regARP, regB	=> regB
680	Load		16		=> regA
681	Store		regA		=> regB
682	Load		32		=> regA
683	Push		regA
684	Load		2		=> regB
685	Compute Add	regARP, regB	=> regB
686	Pop				=> regA
687	Store		regA		=> regB
688	Load		115		=> regA
689	Push		regA
690	Load		3		=> regB
691	Compute Add	regARP, regB	=> regB
692	Pop				=> regA
693	Store		regA		=> regB
694	Load		97		=> regA
695	Push		regA
696	Load		4		=> regB
697	Compute Add	regARP, regB	=> regB
698	Pop				=> regA
699	Store		regA		=> regB
700	Load		121		=> regA
701	Push		regA
702	Load		5		=> regB
703	Compute Add	regARP, regB	=> regB
704	Pop				=> regA
705	Store		regA		=> regB
706	Load		115		=> regA
707	Push		regA
708	Load		6		=> regB
709	Compute Add	regARP, regB	=> regB
710	Pop				=> regA
711	Store		regA		=> regB
712	Load		58		=> regA
713	Push		regA
714	Load		7		=> regB
715	Compute Add	regARP, regB	=> regB
716	Pop				=> regA
717	Store		regA		=> regB
718	Load		32		=> regA
719	Push		regA
720	Load		8		=> regB
721	Compute Add	regARP, regB	=> regB
722	Pop				=> regA
723	Store		regA		=> regB
724	Load		103		=> regA
725	Push		regA
726	Load		9		=> regB
727	Compute Add	regARP, regB	=> regB
728	Pop				=> regA
729	Store		regA		=> regB
730	Load		111		=> regA
731	Push		regA
732	Load		10		=> regB
733	Compute Add	regARP, regB	=> regB
734	Pop				=> regA
735	Store		regA		=> regB
736	Load		116		=> regA
737	Push		regA
738	Load		11		=> regB
739	Compute Add	regARP, regB	=> regB
740	Pop				=> regA
741	Store		regA		=> regB
742	Load		32		=> regA
743	Push		regA
744	Load		12		=> regB
745	Compute Add	regARP, regB	=> regB
746	Pop				=> regA
747	Store		regA		=> regB
748	Load		108		=> regA
749	Push		regA
750	Load		13		=> regB
751	Compute Add	regARP, regB	=> regB
752	Pop				=> regA
753	Store		regA		=> regB
754	Load		111		=> regA
755	Push		regA
756	Load		14		=> regB
757	Compute Add	regARP, regB	=> regB
758	Pop				=> regA
759	Store		regA		=> regB
760	Load		99		=> regA
761	Push		regA
762	Load		15		=> regB
763	Compute Add	regARP, regB	=> regB
764	Pop				=> regA
765	Store		regA		=> regB
766	Load		107		=> regA
767	Push		regA
768	Load		16		=> regB
769	Compute Add	regARP, regB	=> regB
770	Pop				=> regA
771	Store		regA		=> regB
772	Load		10		=> regA
773	Push		regA
774	Load		17		=> regB
775	Compute Add	regARP, regB	=> regB
776	Pop				=> regA
777	Store		regA		=> regB
778	Push		regSprID
779	Pop				=> regA
780	WriteInstr	regA		=> 65536
781	Load		1		=> regE
782	Compute Add	regARP, regE	=> regE
783	Load		1		=> regD
784	Load		regE		=> regA
785	Compute Add	regA, regE	=> regA
786	Load		1		=> regB
787	Compute Add	regB, regE	=> regB
788	Compute GtE	regB, regA	=> regC
789	Branch		regC		-> Rel 5
790	Load		regB		=> regF
791	WriteInstr	regF		=> 65537
792	Compute Add	regB, regD	=> regB
793	Jump				-> Rel (-5)
794	Load		regB		=> regF
795	WriteInstr	regF		=> 65537
796	Load		1		=> regB
797	Load		41		=> regA
798	Compute Add	regARP, regA	=> regA
799	Store		reg0		=> regA
800	Compute Add	regA, regB	=> regA
801	Load		814		=> regC
802	Store		regC		=> regA
803	Compute Add	regA, regB	=> regA
804	Store		regARP		=> regA
805	Compute Add	regA, regB	=> regA
806	Load		0		=> regC
807	Compute Add	regARP, regC	=> regC
808	Store		reg0		=> regA
809	Compute Add	regA, regB	=> regA
810	Store		regC		=> regA
811	Load		46		=> regA
812	Compute Add	regARP, regA	=> regARP
813	Jump				-> Abs 469
814	Load		5		=> regA
815	Compute Sub	regARP, regA	=> regA
816	Load		regA		=> regA
817	Push		regA
818	Load		3		=> regA
819	Compute Sub	regARP, regA	=> regA
820	Load		regA		=> regARP
821	Load		18		=> regB
822	Compute Add	regARP, regB	=> regB
823	Load		22		=> regA
824	Store		regA		=> regB
825	Load		32		=> regA
826	Push		regA
827	Load		19		=> regB
828	Compute Add	regARP, regB	=> regB
829	Pop				=> regA
830	Store		regA		=> regB
831	Load		115		=> regA
832	Push		regA
833	Load		20		=> regB
834	Compute Add	regARP, regB	=> regB
835	Pop				=> regA
836	Store		regA		=> regB
837	Load		97		=> regA
838	Push		regA
839	Load		21		=> regB
840	Compute Add	regARP, regB	=> regB
841	Pop				=> regA
842	Store		regA		=> regB
843	Load		121		=> regA
844	Push		regA
845	Load		22		=> regB
846	Compute Add	regARP, regB	=> regB
847	Pop				=> regA
848	Store		regA		=> regB
849	Load		115		=> regA
850	Push		regA
851	Load		23		=> regB
852	Compute Add	regARP, regB	=> regB
853	Pop				=> regA
854	Store		regA		=> regB
855	Load		58		=> regA
856	Push		regA
857	Load		24		=> regB
858	Compute Add	regARP, regB	=> regB
859	Pop				=> regA
860	Store		regA		=> regB
861	Load		32		=> regA
862	Push		regA
863	Load		25		=> regB
864	Compute Add	regARP, regB	=> regB
865	Pop				=> regA
866	Store		regA		=> regB
867	Load		114		=> regA
868	Push		regA
869	Load		26		=> regB
870	Compute Add	regARP, regB	=> regB
871	Pop				=> regA
872	Store		regA		=> regB
873	Load		101		=> regA
874	Push		regA
875	Load		27		=> regB
876	Compute Add	regARP, regB	=> regB
877	Pop				=> regA
878	Store		regA		=> regB
879	Load		108		=> regA
880	Push		regA
881	Load		28		=> regB
882	Compute Add	regARP, regB	=> regB
883	Pop				=> regA
884	Store		regA		=> regB
885	Load		101		=> regA
886	Push		regA
887	Load		29		=> regB
888	Compute Add	regARP, regB	=> regB
889	Pop				=> regA
890	Store		regA		=> regB
891	Load		97		=> regA
892	Push		regA
893	Load		30		=> regB
894	Compute Add	regARP, regB	=> regB
895	Pop				=> regA
896	Store		regA		=> regB
897	Load		115		=> regA
898	Push		regA
899	Load		31		=> regB
900	Compute Add	regARP, regB	=> regB
901	Pop				=> regA
902	Store		regA		=> regB
903	Load		105		=> regA
904	Push		regA
905	Load		32		=> regB
906	Compute Add	regARP, regB	=> regB
907	Pop				=> regA
908	Store		regA		=> regB
909	Load		110		=> regA
910	Push		regA
911	Load		33		=> regB
912	Compute Add	regARP, regB	=> regB
913	Pop				=> regA
914	Store		regA		=> regB
915	Load		103		=> regA
916	Push		regA
917	Load		34		=> regB
918	Compute Add	regARP, regB	=> regB
919	Pop				=> regA
920	Store		regA		=> regB
921	Load		32		=> regA
922	Push		regA
923	Load		35		=> regB
924	Compute Add	regARP, regB	=> regB
925	Pop				=> regA
926	Store		regA		=> regB
927	Load		108		=> regA
928	Push		regA
929	Load		36		=> regB
930	Compute Add	regARP, regB	=> regB
931	Pop				=> regA
932	Store		regA		=> regB
933	Load		111		=> regA
934	Push		regA
935	Load		37		=> regB
936	Compute Add	regARP, regB	=> regB
937	Pop				=> regA
938	Store		regA		=> regB
939	Load		99		=> regA
940	Push		regA
941	Load		38		=> regB
942	Compute Add	regARP, regB	=> regB
943	Pop				=> regA
944	Store		regA		=> regB
945	Load		107		=> regA
946	Push		regA
947	Load		39		=> regB
948	Compute Add	regARP, regB	=> regB
949	Pop				=> regA
950	Store		regA		=> regB
951	Load		10		=> regA
952	Push		regA
953	Load		40		=> regB
954	Compute Add	regARP, regB	=> regB
955	Pop				=> regA
956	Store		regA		=> regB
957	Push		regSprID
958	Pop				=> regA
959	WriteInstr	regA		=> 65536
960	Load		18		=> regE
961	Compute Add	regARP, regE	=> regE
962	Load		1		=> regD
963	Load		regE		=> regA
964	Compute Add	regA, regE	=> regA
965	Load		1		=> regB
966	Compute Add	regB, regE	=> regB
967	Compute GtE	regB, regA	=> regC
968	Branch		regC		-> Rel 5
969	Load		regB		=> regF
970	WriteInstr	regF		=> 65537
971	Compute Add	regB, regD	=> regB
972	Jump				-> Rel (-5)
973	Load		regB		=> regF
974	WriteInstr	regF		=> 65537
975	WriteInstr	reg0		=> 1
976 ==>	End sync on: _g_v#//
977 ==>	Post-parallel - slaves terminate and master joins
978	Compute Equal	regSprID, reg0	=> regA
979	Branch		regA		-> Rel 5
980	Load		1		=> regA
981	Compute Sub	regSprID, regA	=> regA
982	WriteInstr	reg0		=> regA
983	Jump				-> Abs 5
984	ReadInstr	0
985	Receive				-> regA
986	Branch		regA		-> Rel (-2)
987 ==>	Return to program
988 ==>	Post-program - kill slaves
989	Load		991		=> regA
990	WriteInstr	regA		=> 0
991	EndProg
