.// <
    $ INITIALISING $
    . # var_lampon
    . # var_counter

    $ PROGRAM VARIABLES $
    . # cur_node = 1
    . # answer = 0
    . ? asking = \
    . [*] wrong_answer = "This is not a valid option. Please enter your answer again."
    . * break = '\n'

    $ MESSAGES AND OPTIONS $
    . [*] mes_0 0= "The lamp is off."
    . [*] mes_1 1= "The lamp is on."
    . [*] ques_2 2= "Do you want to turn on the lamp?"
    . [*] ques_3 3= "Do you want to turn off the lamp?"
    . [*] option_4 4= "1. Yes, I want to turn on the lamp."
    . [*] option_5 5= "2. No, I don't want to turn on the lamp."
    . [*] option_6 6= "1. Yes, I want to turn off the lamp."
    . [*] option_7 7= "2. No, I don't want to turn off the lamp."

    . ?^ |cur_node != -1| <
        . ?- |cur_node == 1| < $ MESSAGE NODE $
            $ MESSAGING $
            . [*] < mes_0 . * < break
            . cur_node = 2

            $ FINAL BREAK $
            . * < break

            $ ASSIGNING $
            . var_lampon = 0
        >
        . ?- |cur_node == 2| < $ QUESTION NODE $
            $ MESSAGING $
            . [*] < ques_2 . * < break
            . [*] < option_4 . * < break
            . [*] < option_5 . * < break

            $ ASKING $
            . asking = /
            . ?^ |asking| <
                . # > answer
                . ?- |answer == 1| <
                    . cur_node = 3
                    . asking = \
                >
                . ?- |answer == 2| <
                    . cur_node = 1
                    . asking = \
                >
                . ?- |answer < 1 && answer > 2| <
                    . [*] < wrong_answer . * < break
                >
            >
            $ FINAL BREAK $
            . * < break

            $ ASSIGNING (empty) $
        >
        . ?- |cur_node == 3| < $ BOOLEAN EVALUATION $
            $ EVALUATING $
            . ?< |(var_counter % 2) * 2 == var_counter| <
                $ IF TRUE $
                . cur_node = 4
            > <
                $ IF FALSE $
                . cur_node = 1
            >

            $ ASSIGNING $
            . var_counter = var_counter + 1
        >
        . ?- |cur_node == 4| < $ MESSAGE NODE $
            $ MESSAGING $
            . [*] < mes_1 . * < break
            . cur_node = 5

            $ FINAL BREAK $
            . * < break

            $ ASSIGNING $
            . var_lampon = 1
        >
        . ?- |cur_node == 5| < $ QUESTION NODE $
            $ MESSAGING $
            . [*] < ques_3 . * < break
            . [*] < option_6 . * < break
            . [*] < option_7 . * < break

            $ ASKING $
            . asking = /
            . ?^ |asking| <
                . # > answer
                . ?- |answer == 1| <
                    . cur_node = 6
                    . asking = \
                >
                . ?- |answer == 2| <
                    . cur_node = 4
                    . asking = \
                >
                . ?- |answer < 1 && answer > 2| <
                    . [*] < wrong_answer . * < break
                >
            >
            $ FINAL BREAK $
            . * < break

            $ ASSIGNING (empty) $
        >
        . ?- |cur_node == 6| < $ BOOLEAN EVALUATION $
            $ EVALUATING $
            . ?< |(var_counter % 2) * 2 == var_counter| <
                $ IF TRUE $
                . cur_node = 1
            > <
                $ IF FALSE $
                . cur_node = 4
            >

            $ ASSIGNING $
            . var_counter = var_counter + 1
        >
    >
>
